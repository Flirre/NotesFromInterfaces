#+LATEX: \newpage
* Chapter 1
** What are the three types of goals that Cooper mentions, and what do they mean?
*** End goals
Efficiency, the user wants to get something done

*** Experience goal MOST IMPORTANT
Wanna feel something, like computer games. VR applications. (user experiecne)
The User NEVER wants to feel STUPID.
*** Life goals
I wanna be something. Long term
Apple: I wanna be a apple product user. A status symbol.

** What is the relation between goals, activities, tasks, and functionalities?
The goal is supported by the activities.
Those activities can be broken down into tasks.
And those tasks can be fulfilled by functionalities in the application.

**  What are non-user goals? Exemplify!
The goals of other stakeholders like, Customers buying the product. Customers are often the customer,
but not always. A system can be bought and then provided by an admin and used by others.
Business/organization/Management, demands such as effectivity, data-gathering and conformance.
Tech: Technical requirements must be met. Handling data properly or other tech. reqs.


** What is the difference between mental models, represented models and implementation models, respectively?


** Give a brief overview of the steps in the goal-oriented process.
*** Research
Understanding user behavior patterns and user needs.

*** Modeling
Create personas and narratives.

*** Requirements
What functionalities are needed. Define them as ''what''.

*** Framework
Layout. Define form, elements, keypaths, grouping, etc.

*** Refinement
The actual sketching and detailing of the product.

*** Development support
Support and oversee developers. Making sure that what you designed is what is being developed.

** One of the most important goals for the user is to not feel…?
NOT FEEL STUPID


#+LATEX: \newpage
* Chapter 5
** List the elements of an interaction framework and describe the main reason for each of them, respectively.
*** Form factor
What the application is running on. Laptop, phone, something new? Design it!
*** Posture
How do you use it? For long and focused? Short while, and then goes away?
*** Input
What will the user put in to the system?
Input pdf into ping pong.
input grades.
*** Output
What does the system spit out?
System outputs pdf to examiner.
Grades are output for student.
*** Data Element (what's in the system?)
The files one can send in. The user accounts in the system, etc.

*** Functional Elements
What do we need to do with those elements?
Download data and display on screen.

*** Grouping and layout
Prioritizing, grouping and sequencing elements.
Where should different things be, what should be next to what, etc.

*** Keypath scenarios
Likely sequence of actions.

Ex. Hand in by uploading.
Download the hand in.
Upload grading.
Present grading to person uploading hand in.

** When are usability tests useful for the development process, and what can they validate?
Finding if you have missed something.
Explore unusual cases.
Break the design, what if we had X amount of users? How would it work on smartphone? On different systems?

Testing a semi-functional prototype and see if it works as intended. If users interpret it like you do.

** Describe how to conduct a formative usability test.
''Hey you, does this make sense?''
Done during development. Testing with anyone, just trying a part of the interface.

** Describe how to conduct a summative usability test.
When a prototype is made. Seeing if the prototype works and is understood by an actual user. In earlier steps, it can be tried on a colleague or something.

** What are one of the main drawbacks of usability testing, according to Cooper?
Doesn't really test the system for long-term usage.


** Note
The designer should not moderate the user test.
This is because the user should be able to say anything they want about the system, and the
designer should not have a stake in the design. They don't gain or lose anything if the design
is good or bad.

#+LATEX: \newpage
* Chapter 7

** List the four values that we should design for, according to Cooper et al.

*** ethical
Do no harm. Improve the human situation.

personal harm - loss of dignity, Ping pongs shitty interface

psychological harm - confusion and frustration

physical harm - injury or death

economic harm - loss of profit or productivity, ping pong slows you down preventing you
from doing other productive things.

social harm - supporting injustice
Porn sites. Social media, enabling cyberbullying.

environmental harm - energy consumption

*** purposeful
Help users reach their goals
accomodate user situations and capacities

*** pragmatic
Help client reach their goals

*** elegant
Coherent and unified whole
using less to accomplish more

** What does “ethical interaction design” imply – give examples
An interface that makes the user feel stupid with because of the design, like ping pong
that can be hard to use making the user feel stupid. That is a thing that should be avoided.
Ping pong can also slow down a user, making them miss out on other work.

Porn sites are evil. Don't design them.
Have safeguards designed to help stop social media being used for ''evil'' things,
such as cyberbullying.

#+LATEX: \newpage
* Chapter 8
Software should behave like a considerate and supportive human being.
Trying to foresee or suggest likely behaviour.
Doesn't burden the user.
Allow for alternate ways of doing things, bending of rules and undoing mistakes.
Fail Gracefully.
** In terms of interaction design, what does “taking an interest”, “being consentious”, “failing gracefully”, “bending the rules” and “taking responsibility” really MEAN, respectively?
Consentius - DO YOU WANT TO DELETE THIS? YE! NUH!
Bending the rules - Allowing the user to undo mistakes such as a deletion. Different controls
such as mouse control and keyboard control for the same things.
Fail gracefully - Have clear error messages.
Taking responsibility - Don't ask the user the same thing over and over again. Pestering the user.
Taking an interest - Remember the user, suggesting the file used most recently.

#+LATEX: \newpage
* Chapter  9
** What is typical for a sovereign posture?
Large applictations that demand full attention.
Fullscreen.
Long periods of time.
Work-critical tasks.

Examples, MS Word, book-reading app. Sketchup, creating models.
** What is typical for a transient posture?
Open temporary, short bursts of time.
Smaller or more singular tasks.
Not used often.

** What design solutions are used in a well-designed sovereign posture application?
Discrete colors. Lot of tools and shortcuts. Lots of rich input. Work centric,
what you are creating is in focus. Minimal amounts of popups.
** What design solutions are used in well-designed transient posture application?
Colours guiding users to different parts. Simple controls.
Few but big buttons.

Guidelines for transient design:
Simple, clear, quick, large icons, more pliant ''click me'', and bright, saturated colours.

** Which postures can we use for the web, and how do they differ, respectively?
Informational - Websites providing information, Chalmers web homepage.
Transactional - Websites providing a service. Online banking system, pingpong handing in items.
Web applications - Sites that work as applications enabling you to create things. Google Drive, evernote etc.

What postures that can be used depends on the task. Will the user use the site a short amount of time etc.

For Informational post. the Navigation structure is the most important part.
For Transactional post. Navigation is important, browse and search + functional
Interaction sequences must be considered and designed to be a sequence. I.E. webshop. Choose an item, go to checkout, provide address etc.
Often Transient.

For Web App.
Similar to desktop applications. Often sovereign.

** Which postures can we – generally speaking – use for smartphones and tablets, respectively?
Usually transient for smartphones.
Tablets are usually sovereign.
This is generalized information.

#+LATEX: \newpage
* Chapter 10
#+LATEX: \newpage

** Explain the differences between beginners, intermediates and experts.
*** Beginners
Need explanations and tooltips for learning the software. A guided tour through the software is helpful.
Helpful to have galleries and templates to help the user get started.
Keep the represented model close to the users mental model.

Uses the software seldomly and won't learn shortcuts etc.
*** Intermediates:
The most common group.
Uses keyboard shortcuts or toolbars. Doesn't search through menus.
Should not use irreversible commands unless explicitly looking for them.
Uses tooltips.
Want to be able to customize their experience.

Uses the software often, learns shortcuts etc.

*** Experts:
They want shortcuts for everything. Since they use it often, they'll be able to learn the shortcuts.
Even more customization compared to intermediates.
Can handle high information density. Like in Word, 3D-modeling software(ex. Maya)

** How can we design sovereign softwares to support the needs of beginners, intermediates and experts, preferably at the same time?
Make sure that the software has menus that the beginner can scroll through. Toolbars and some shortcuts for the intermediates.
And keyboard shortcuts for all the actions that the experts will use and learn.

Have non invasive information such as toolbars that exlpain to the beginner and intermediate,
but won't get in the way of the expert.

The actions that are irreversible or at least persistent should be 'hidden' away so that a beginner or intermediate
won't activate them by mistake.
** How do we graduate users from beginners to intermediates?
let them turn off help in form of tours etc. Write out the shortcuts next to the commands in the menus.
** When users behave stupidly, they are not really stupid, they are probably… ?
...in a hurry.

* Chapter 11
#+LATEX: \newpage
** Cooper et al provide a very long bullet list on how design for “harmonious interactions”. Please summarize, merging the points into bigger topics.
Well structured and forthcoming.

There should be logical patterns, both spatial and functional.
Keep the necessary/popular tools out and hide what is used more seldomly.


Information should be presented with context.
Commands and controls should be treated differently. The controls can adjust the output from the commands.

Hide ejector seats. Might be hard to change back for a beginner.
Reflect status. Provide modeless feedback. (look busy when being busy, etc.)

Imply, suggest, hint. example. Date: YYYY-MM-DD

** Why is it a good idea to separate the use of a function from the configuration of the function?
It's more commom to use the function than to configure it. You draw more often than change the settings for the pen tool.


** What use can animations have in a graphical interface, according to Cooper?
They can give the interface a sense of physicality. Like the interface follows the laws of gravity, and has inertia and elasticity. Animations should be used very sparingly so that they don't detract from the experience of using the interface.

They can be good for navigation transitions, state transitions, focusing the users attention and can show that something is happening like that the program is working with the latest operation or set of data etc. This can be shown with a circle, an hourglass, the apple umbrella etc.

* Chapter 12
#+LATEX: \newpage

** What is excise and why is it bad?
Tasks that must be completed but aren't goal oriented. Configuring equipment, IDEs etc.
Feel inefficient and unnecesary.

** List the three types of excise, giving concrete examples of each type.
*** Navigation
When you need to move or look around in a interface.
*** Visual
Things competing for the users attention.
Google is a good example that avoids this, their search page provides the user with a search bar and possibly a doodle.
Amazon is a poor example. Overwhelming the user different categories and items.
Webhallen shows a lot of items without suffering from visual excise. The information shown is relevant and things are grouped logically.

*** Modal
Unimportant information is shown to the user. Error notifications. Dialogs etc.

** How can we eliminate excise? Give five examples.
*** Navigation
Avoiding hierarchies.
Common tools close at hand.
Quick navigation, example alt-tab.
provide overview along with detail

Reduce the number of places to go.
+ Windows
+ Views
+ Dialogs
+ Navigation areas (web)

Moving around in large amounts of data
+ Improved with filtering or sorting.
+ Panning/scrolling/zooming when in image editors, 3D-modeling etc.
+ Split things up in panes/paging/tabs

+ Provide signposts that help orient users. Cancel/OK buttons etc.

Open recent file.

*** Visual
Skeumorphism helps against visual excise.

*** Modal
Don't have the user:
+ remember where they put their files etc.
+ move or resize windows.
+ enter unnecessary data.
+ verify actions, acknowledge information.

Properly map controls to function.
The results can be clear but not the target.
Poor mapping forces user to stop and think. (stove example)

A metaphor used to help with the users mental model can hinder what is possible to do with the interface.

Allow the user to input where they get output. Change an erronius field when they are presented with the fact that it is wrong without backtracking.


** Why is mapping controls important?

* Chapter 13
#+LATEX: \newpage
#+LATEX: \newpage

** What is affordance?
It suggests how to use something. A door handle invites a user to push down to be able to open the door. It is mostly for objects in the physical space.

** What is pliancy, and why is it important to design pliant objects?
Pliancy is how we design affordance in virtual space. Pliancy helps the user know that an item can be interacted with.

** What is the difference between affordance and pliancy?
Affordance is physical. Pliancy is virtual.

** Describe the four types of pliancy hinting.
*** Static object hinting
How an item looks when not manipulated. Like a shadow or something hinting at the pressability.

*** Dynamic visual hinting
How the item reacts to a cursor passing over it.

*** Pliant response hinting
The item changes appearance when actually interacted with. Like changing colour when pressed.

*** Cursor hinting
The cursor changing appearance to hint about what can be done. A finger to hint about clicking, caret for text editing, etc.

** What does idiomatic mean in the context of interaction design?
It means that the user needs to learn a metaphor. A good idiom will only be learned once and retained forever.

* Chapter 14
#+LATEX: \newpage

** What are the advantages and disadvantages with automatic save?
